ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(0,0), include.mean = F),
distribution.model =  "norm")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*7
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length#,
#n.start = NULL, refit.every = 100, refit.window = c("recursive"),
#window.size = NULL, solver = "hybrid", fit.control = list(),
#solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
#cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)]
myforecast <- modelroll@forecast$density$Realized
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
#  geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#x %>% ts() %>% autoplot()
summary(modelroll)
str(modelroll)
modelroll
ugarch_spec
str(modelroll@forecast)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)]
myforecast <- modelroll@forecast$density$[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
#  geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
#  geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*7
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
#  geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)+1), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,4), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*7
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*7
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
forecast.length <- 24*10
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "norm")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*10
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(2,2)),
mean.model = list(armaOrder = c(1,1), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*10
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,1), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*10
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#str(modelroll@forecast)
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(2,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*10
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#str(modelroll@forecast)
#str(modelroll@forecast)
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(2,2)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*10
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#str(modelroll@forecast)
forecast.length <- 24*12
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 200, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#str(modelroll@forecast)
#str(modelroll@forecast)
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(2,2)),
mean.model = list(armaOrder = c(2,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*20
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 200, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#str(modelroll@forecast)
#str(modelroll@forecast)
#str(modelroll@forecast)
#str(modelroll@forecast)
#str(modelroll@forecast)
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(2,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*20
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 200, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#str(modelroll@forecast)
ugarch_spec <- ugarchspec(variance.model = list(model='eGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*20
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 200, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
ugarch_spec <- ugarchspec(variance.model = list(model='sGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*20
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 200, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#str(modelroll@forecast)
ugarch_spec <- ugarchspec(variance.model = list(model='nGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec <- ugarchspec(variance.model = list(model='NGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec <- ugarchspec(variance.model = list(model='gjrGARCH', garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1,0), include.mean = T),
distribution.model =  "sstd")
ugarch_spec
#fit <- ugarchfit(spec = ugarch_spec, data = hourly.data)#, solver = 'hybrid')
#defaults: ugarchforecast(fitORspec, data = NULL, n.ahead = 10, n.roll = 0, out.sample = 0)
hourly.data %>% length() #169
forecast.length <- 24*20
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 200, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
modelroll <- ugarchroll (
spec=ugarch_spec, data=hourly.data, n.ahead = 1, forecast.length = forecast.length,
n.start = NULL, refit.every = 50, refit.window = c("recursive"),
window.size = NULL, solver = "hybrid", fit.control = list(),
solver.control = list(), calculate.VaR = F, VaR.alpha = c(0.01, 0.05),
cluster = NULL, keep.coef = F
)
#modelroll %>% plot(which=3)
#str(modelroll)
measured <- hourly.data[(length(hourly.data)-2*forecast.length):length(hourly.data)-1]
myforecast <- modelroll@forecast$density[,'Mu']
myforecast <- c(rep(NA, length(measured)-length(myforecast)), myforecast)
x <- c(1:length(measured), 1:length(myforecast))
#y <- c(measured, forecast)
#color <- c(rep('measured', length(measured)), rep('forecast', length(forecast)))
df <- tibble(x1=1:length(measured),y1=measured,x2=1:length(myforecast),y2=myforecast)
df %>% ggplot(aes(x)) +
geom_line(aes(x=x1, y=y1, color='measured')) +
geom_line(aes(x=x2, y=y2, color='forecast'))
#str(modelroll@forecast)
#str(modelroll@forecast)
