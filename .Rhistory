autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
aust <- window(austourists, end=2010)
fit1 <- hw(aust, seasonal="additive")
fit2 <- hw(aust, seasonal="multiplicative")
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive")
fit2 <- hw(aust, seasonal="multiplicative")
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
fit1 <- hw(aust, seasonal="additive", h=14)
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive", h=14)
fit2 <- hw(aust, seasonal="multiplicative")
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive", h=30)
fit2 <- hw(aust, seasonal="multiplicative", h=30)
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive", h=32)
fit2 <- hw(aust, seasonal="multiplicative", h=32)
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive", h=32)
fit2 <- hw(aust, seasonal="multiplicative", h=32)
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
y <- ts(c(123,39,78,52,110), start=2012)
library(tidyverse)
library(forecast)
#install.packages('fpp')
library(fpp)
melsyd[,'First.Class'] %>% autoplot() #syntax
melsyd %>% autoplot() + ggtitle("Economy class passengers: Melbourne-Sydney") +
xlab("Year") +
ylab("Thousands")
autoplot(a10) +
ggtitle("Antidiabetic drug sales") +
ylab("$ million") +
xlab("Year")
a10 %>% ggseasonplot(year.labels=T, year.labels.left = T) +
ylab('$ million') +
ggtitle("Seasonal plot: antidiabetic drug sales")
a10 %>% ggseasonplot(polar=T) +
ylab('$ million') +
ggtitle("Seasonal plot: antidiabetic drug sales")
ggsubseriesplot(a10) +
ylab('$ million') +
ggtitle("Seasonal plot: antidiabetic drug sales")
#install.packages('fpp2')
library(fpp2)
elecdemand
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive", h=32)
fit2 <- hw(aust, seasonal="multiplicative", h=32)
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
autoplot(fit1)
autoplot(fit1[["Model"]])
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive", h=32, damped=T)
fit2 <- hw(aust, seasonal="multiplicative", h=32, damped=T)
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive", h=32, damped=F)
fit2 <- hw(aust, seasonal="multiplicative", h=32, damped=F)
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
fc <- hw(subset(hyndsight, end=length(hyndsight)-35), damped=T, seasonal="multiplicative", h=35)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=F) +
guides(colour=guide_legend(title="Daily forecasts"))
l <- 60
fc <- hw(subset(hyndsight, end=length(hyndsight)-l), damped=T, seasonal="multiplicative", h=l)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=F) +
guides(colour=guide_legend(title="Daily forecasts"))
l <- 120
fc <- hw(subset(hyndsight, end=length(hyndsight)-l), damped=T, seasonal="multiplicative", h=l)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=F) +
guides(colour=guide_legend(title="Daily forecasts"))
fc <- hw(subset(hyndsight,end=length(hyndsight)-35),
damped = TRUE, seasonal="multiplicative", h=35)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=FALSE)+
guides(colour=guide_legend(title="Daily forecasts"))
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=F) +
guides(colour=guide_legend(title="Daily forecasts"))
fc <- hw(subset(hyndsight, end=length(hyndsight)-l), damped=F, seasonal="multiplicative", h=l)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=F) +
guides(colour=guide_legend(title="Daily forecasts"))
fc <- hw(subset(hyndsight,end=length(hyndsight)-35),
damped = TRUE, seasonal="multiplicative", h=35)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=FALSE)+
guides(colour=guide_legend(title="Daily forecasts"))
fc <- hw(subset(hyndsight,end=length(hyndsight)-120),
damped = TRUE, seasonal="multiplicative", h=120)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=FALSE)+
guides(colour=guide_legend(title="Daily forecasts"))
fc <- hw(subset(hyndsight,end=length(hyndsight)-120),
damped = F, seasonal="multiplicative", h=120)
fc <- hw(subset(hyndsight,end=length(hyndsight)-120),
damped = F, seasonal="multiplicative", h=120)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=FALSE)+
guides(colour=guide_legend(title="Daily forecasts"))
fc <- hw(subset(hyndsight,end=length(hyndsight)-120),
damped = F, seasonal="additive", h=120)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=FALSE)+
guides(colour=guide_legend(title="Daily forecasts"))
aust <- window(austourists, end=2008)
fit1 <- hw(aust, seasonal="additive", h=32, damped=F)
fit2 <- hw(aust, seasonal="multiplicative", h=32, damped=F)
autoplot(austourists) +
autolayer(fit1, series="HW additive forecasts", PI=F) +
autolayer(fit2, series="HW multiplicative forecasts", PI=F) +
ylab("Visitor nights (millions)") +
ggtitle("International visitors nights in Australia") +
guides(colour=guide_legend(title="Forecast"))
l <- 120
fc <- hw(subset(hyndsight, end=length(hyndsight)-l), damped=F, seasonal="multiplicative", h=l)
autoplot(hyndsight) +
autolayer(fc, series="HW multi damped", PI=F) +
guides(colour=guide_legend(title="Daily forecasts"))
aust <- window(austourists, start=2005)
fit <- ets(aust)
summary(fit)
autoplot(fit)
cbind('Residuals' = residuals(fit),
'Forecast errors'= residuals(fit, type='response')) %>%
autoplot(facet=T + xlab('Year') + ylab(''))
cbind('Residuals' = residuals(fit),
'Forecast errors'= residuals(fit, type='response')) %>%
autoplot(facet=T + xlab('Year') + ylab(''))
cbind('Residuals' = residuals(fit), 'Forecast errors'= residuals(fit, type='response')) %>%
autoplot(facet=T) + xlab('Year') + ylab('')
fit %>% forecast(h=8) %>% autoplot() +
ylab("International visitor night in Australia (millions)")
fit %>% forecast(h=8) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data", PI=F) +
ylab("International visitor night in Australia (millions)")
aust <- window(austourists, end=2010)
fit <- ets(aust)
fit %>% forecast(h=8) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data", PI=F) +
ylab("International visitor night in Australia (millions)")
fit %>% forecast(h=20) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data", PI=F) +
ylab("International visitor night in Australia (millions)")
fit %>% forecast(h=20) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data", PI=F) +
ylab("International visitor night in Australia (millions)")
aust <- window(austourists, end=2000)
aust <- window(austourists, end=2000)
fit <- ets(aust)
fit %>% forecast(h=20) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data", PI=F) +
ylab("International visitor night in Australia (millions)")
aust <- window(austourists, end=2002)
fit <- ets(aust)
fit %>% forecast(h=20) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data", PI=F) +
ylab("International visitor night in Australia (millions)")
aust <- window(austourists, end=2004)
fit <- ets(aust)
fit %>% forecast(h=20) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data") +
ylab("International visitor night in Australia (millions)")
austourists
aust <- window(austourists, end=2008)
fit <- ets(aust)
fit %>% forecast(h=20) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data") +
ylab("International visitor night in Australia (millions)")
fit %>% forecast(h=40) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data") +
ylab("International visitor night in Australia (millions)")
fit %>% forecast(h=35) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data") +
ylab("International visitor night in Australia (millions)")
aust <- window(austourists, end=2006)
fit <- ets(aust)
fit %>% forecast(h=35) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data") +
ylab("International visitor night in Australia (millions)")
aust <- window(austourists, end=2005)
fit <- ets(aust)
fit %>% forecast(h=35) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data") +
ylab("International visitor night in Australia (millions)")
aust <- window(austourists, end=2007)
fit <- ets(aust)
fit %>% forecast(h=35) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data") +
ylab("International visitor night in Australia (millions)")
aust <- window(austourists, end=2008)
fit <- ets(aust)
fit %>% forecast(h=35) %>% autoplot(series='Fitted') +
autolayer(austourists, series="Data") +
ylab("International visitor night in Australia (millions)")
Box.test(diff(goog200), lag=10, type='Ljung-Box')
gridExtra::grid.arrange(ggAcf(goog200), ggAcf(diff(goog200)))
a10
cbind("Sales ($million)" = a10,
"Monthly log sales" = log(a10),
"Annual change in log sales" = diff(log(a10), 12)) %>%
autoplot(facet=T) + xlab("Year") + ylab("") +
ggtitle("Antidiabetic drug sales")
gridExtra::grid.arrange(ggAcf(a10), ggAcf(log(a10)), ggAcf(diff(log(a10), 12))
gridExtra::grid.arrange(ggAcf(a10), ggAcf(log(a10)), ggAcf(diff(log(a10), 12)))
gridExtra::grid.arrange(
ggAcf(a10),
ggAcf(log(a10)),
ggAcf(diff(log(a10), 12)),nrow=3)
lag = 20
Box.test(a10, lag=lag, type='Ljung-Box')
Box.test(log(a10), lag=lag, type='Ljung-Box')
Box.test(diff(log(a10), 12)), lag=lag, type='Ljung-Box')
lag = 20
Box.test(a10, lag=lag, type='Ljung-Box')
Box.test(log(a10), lag=lag, type='Ljung-Box')
Box.test(diff(log(a10), 12), lag=lag, type='Ljung-Box')
lag = 1
Box.test(a10, lag=lag, type='Ljung-Box')
Box.test(log(a10), lag=lag, type='Ljung-Box')
Box.test(diff(log(a10), 12), lag=lag, type='Ljung-Box')
cbind("Billion Kwh" = usmelec,
"Logs" = log(usmelec),
"Seasonally\n differenced logs" = diff(log(usmelec), 12),
"Doubly\n differenced logs" = diff(diff(log(usmelec), 12))) %>%
autoplot(facets=T) +
xlab("Year") + ylab("") +
ggtitle("Monthly US net electricity generation")
library(urca)
goog %>% ur.kpss() %>% summary()
goog %>% diff() %>% ur.kpss() %>% summary()
ndiffs(goog)
nsdiffs(goog)
nsdiffs(elecsales)
nsdiffs(elecequip)
usmelec %>% nsdiffs()
usmelec %>% diff() %>% nsdiffs()
usmelec %>% nsdiffs()
usmelec %>% diff(lag=12) %>% nsdiffs()
usmelec %>% log() %>% nsdiffs()
usmelec %>% log() %>% diff(lag=12) %>% nsdiffs()
diff_data <- data %>% add_column(diff_speed = c(0,diff(data$speed)))
diff_data[(nrow(data)-24*7*4):nrow(data),] %>%
mutate(time=as_date(time))) %>%
ggplot() + geom_line(aes(time, diff_speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
library(forecast)
library(tidyverse)
library(lubridate)
library(tidyverse)
library(forecast)
library(fpp)
library(fpp2)
require(gridExtra)
library(fitdistrplus)
library(logspline)
setwd('/home/diogo/Jupyter/tdef')
path <- '/home/diogo/Jupyter/tdef/Res025_ERA5.txt'
data <- read_table2(path, skip=9, comment="--") %>%
tail(-3) %>%
mutate(time=with_tz(ymd_hms(paste(Date, `Time(UTC)`)), tzone='Brazil/East')) %>%
mutate(hour=hour(time), day=date(time), month=month(time,label=TRUE, abbr=FALSE), year=year(time)) %>%
mutate(year_month = paste(year, month)) %>%
rename(speed=c_ws)
data[(nrow(data)-365*24*2):nrow(data),] %>%
mutate(time=as_date(time)) %>%
ggplot() + geom_line(aes(time, speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
ggsave('thesis/images/entire_series_hourly_basis.png')
diff_data <- data %>% add_column(diff_speed = c(0,diff(data$speed)))
diff_data[(nrow(data)-24*7*4):nrow(data),] %>%
mutate(time=as_date(time))) %>%
ggplot() + geom_line(aes(time, diff_speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
diff_data <- data %>% add_column(diff_speed = c(0,diff(data$speed)))
diff_data[(nrow(data)-24*7*4):nrow(data),] %>%
mutate(time=as_date(time)) %>%
ggplot() + geom_line(aes(time, diff_speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
diff_data$diff_speed %>% ts() %>% autoplot()
library(forecast)
library(tidyverse)
library(lubridate)
library(tidyverse)
library(forecast)
library(fpp)
library(fpp2)
require(gridExtra)
library(fitdistrplus)
library(logspline)
setwd('/home/diogo/Jupyter/tdef')
path <- '/home/diogo/Jupyter/tdef/Res025_ERA5.txt'
data <- read_table2(path, skip=9, comment="--") %>%
tail(-3) %>%
mutate(time=with_tz(ymd_hms(paste(Date, `Time(UTC)`)), tzone='Brazil/East')) %>%
mutate(hour=hour(time), day=date(time), month=month(time,label=TRUE, abbr=FALSE), year=year(time)) %>%
mutate(year_month = paste(year, month)) %>%
rename(speed=c_ws)
data[(nrow(data)-365*24*2):nrow(data),] %>%
mutate(time=as_date(time)) %>%
ggplot() + geom_line(aes(time, speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
ggsave('thesis/images/entire_series_hourly_basis.png')
diff_data <- data %>% add_column(diff_speed = c(0,diff(data$speed)))
diff_data[(nrow(diff_data)-24*7*4):nrow(diff_data),] %>%
mutate(time=as_date(time)) %>%
ggplot() + geom_line(aes(time, diff_speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
data$speed %>% diff() %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts() %>% autoplot()
ggsave('thesis/images/entire_series_hourly_basis_seasonless.png')
data[(nrow(data)-24*7*12):nrow(data),] %>%
mutate(time=as_date(time), speed=c(0,diff(speed))) %>%
ggplot() + geom_line(aes(time, speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
data[(nrow(data)-24*7*12):nrow(data),]$speed %>% diff() %>% ts() %>% autoplot()
data[(nrow(data)-24*7*12):nrow(data),] %>%
mutate(time=as_date(time), speed=c(0,diff(speed))) %>%
ggplot() + geom_line(aes(time, speed))# +
data[(nrow(data)-365*24*2):nrow(data),] %>%
mutate(time=as_date(time), speed=c(0,diff(speed))) %>%
ggplot() + geom_line(aes(time, speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
ggsave('thesis/images/entire_series_hourly_basis_seasonless.png')
data[(nrow(data)-24*7):nrow(data),]$speed %>% diff() %>% ts() %>% autoplot()
data[(nrow(data)-24*7*4):nrow(data),]$speed %>% diff() %>% ts() %>% autoplot()
kpss.test(data[(nrow(data)-24*7*4):nrow(data),]$speed %>% diff())
data[(nrow(data)-24*7*4):nrow(data),]$speed %>% ndiffs()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ndiffs()
kpss.test(data[(nrow(data)-24*7*4):nrow(data),]$speed %>% diff())
r <- kpss.test(data[(nrow(data)-24*7*4):nrow(data),]$speed %>% diff())
r$statistic
r$parameter
r$p.value
r$method
r$data.name
kpss.test(data[(nrow(data)-24*7*4):nrow(data),]$speed)
kpss.test(data[(nrow(data)-365*24*2):nrow(data),]$speed)
r <- kpss.test(data[(nrow(data)-365*24*2):nrow(data),]$speed)
r$p.value
adf.test(data[(nrow(data)-365*24*2):nrow(data),]$speed, alternative = "stationary")
BoxCox.lambda(data[(nrow(data)-365*24*2):nrow(data),]$speed)
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% BoxCox(lambda = 1.175388) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts() %>% BoxCox(lambda = 1.175388) %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts() %>% BoxCox(lambda = 1.175388)
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts() %>% BoxCox(lambda = 0) %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts() %>% BoxCox(lambda = 1) %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts() %>% BoxCox(lambda = 2) %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts() %>% BoxCox(lambda = 1.175388) %>% autoplot()
BoxCox.lambda(data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff())
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% BoxCox(lambda = 1) %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% BoxCox(lambda = 1) %>% ts() %>% autoplot()
BoxCox.lambda(data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts())
BoxCox.lambda(data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts())
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts(frequency=24) %>% BoxCox(lambda = 1) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts(frequency=24) %>% BoxCox(lambda = 1.2) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% ts(frequency=24) %>% BoxCox(lambda = 4) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% BoxCox(lambda = 4) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% BoxCox(lambda = 1) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% BoxCox(lambda = 1.18) %>% ts() %>% autoplot()
data[(nrow(data)-24*7*4):nrow(data),]$speed %>% diff(order=2) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff(order=2) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff(lag=12) %>% ts() %>% autoplot()
data[(nrow(data)-365*24*2):nrow(data),] %>%
mutate(time=as_date(time), speed=c(0,diff(speed, lag=12))) %>%
ggplot() + geom_line(aes(time, speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
data[(nrow(data)-365*24*2):nrow(data),] %>%
mutate(time=as_date(time), speed=c(rep(0,12),diff(speed))) %>%
ggplot() + geom_line(aes(time, speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
data[(nrow(data)-365*24*2):nrow(data),] %>%
mutate(time=as_date(time), speed=c(rep(0,12),diff(speed, lag=12))) %>%
ggplot() + geom_line(aes(time, speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
ggsave('thesis/images/entire_series_hourly_basis_seasonless_boxcox.png')
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% ggtsdisplay()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff(order=2) %>% ts %>% ggtsdisplay()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff(order=4) %>% ts %>% ggtsdisplay()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff(order=12) %>% ts %>% ggtsdisplay()
data[(nrow(data)-24*2):nrow(data),]$speed %>% diff(order=12) %>% ts %>% ggtsdisplay()
data[(nrow(data)-24*7):nrow(data),]$speed %>% diff(order=12) %>% ts %>% ggtsdisplay()
data[(nrow(data)-24*7):nrow(data),]$speed %>% diff(lag=12) %>% ts %>% ggtsdisplay()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff(lag=12) %>% ts %>% ggtsdisplay()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% ggtsdisplay()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% ggtsdisplay()
ggsave('thesis/images/long_memory.png')
png(file='thesis/images/long_memory.png')
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% ggtsdisplay()
dev.off()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% ggtsdisplay(lag.max=200)
ggsave('thesis/images/long_memory.png')
png(file='thesis/images/long_memory.png')
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% ggtsdisplay()
dev.off()
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% ggtsdisplay(lag.max=200)
ggsave('thesis/images/long_memory_lagmax.png')
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% Acf(lag.max=200)
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% Acf(lag.max=400)
ggsave('thesis/images/long_memory_lagmax.png')
data[(nrow(data)-365*24*2):nrow(data),]$speed %>% diff() %>% ts %>% Acf(lag.max=400) %>% autoplot()
ggsave('thesis/images/long_memory_lagmax.png')
data[(nrow(data)-24*7*3):nrow(data),] %>%
mutate(time=as_date(time)) %>%
ggplot() + geom_line(aes(time, speed)) +
scale_x_date(date_labels = "%b %y", date_breaks = "month") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = 'Tempo (hora)', y = 'Velocidade (m/s)') +
ggtitle('Velocidade do vento em base horária')
data[(nrow(data)-24*7*3):nrow(data),] %>% ts() %>% autoplot()
data[(nrow(data)-24*7*3):nrow(data),]$speed %>% ts() %>% autoplot()
ggsave('thesis/images/last3weeks.png')
kpss.test(data[(nrow(data)-24*7*3):nrow(data),]$speed)
data[(nrow(data)-24*7*3):nrow(data),]$speed %>% ndiffs()
plot1 <- data[(nrow(data)-24*7*3):nrow(data),]$speed %>% ts() %>% autoplot()
plot2 <- data[(nrow(data)-24*7*3):nrow(data),]$speed %>% diff() %>% ts() %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
ggsave('thesis/images/last3weeks.png')
png(file='thesis/images/last3weeks.png')
plot1 <- data[(nrow(data)-24*7*3):nrow(data),]$speed %>% ts() %>% autoplot()
plot2 <- data[(nrow(data)-24*7*3):nrow(data),]$speed %>% diff() %>% ts() %>% autoplot()
grid.arrange(plot1, plot2, ncol=2)
dev.off()
